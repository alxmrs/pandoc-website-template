#!/bin/sh

ROOT=$(dirname $0)/..
DEST=${DEST:-"$ROOT/docs"}
SRC=${SRC:-"$ROOT/src"}
HEADER=${HEADER:-"$SRC/header.html"}
FOOTER=${FOOTER:-"$SRC/footer.html"}
CSS=${CSS:-"css/main.css"}
SRCEXT=${SRCEXT:-"md"}
DSTEXT=${DSTEXT:-"html"}
PANOPTS=${PANOPTS:-"--css $CSS --email-obfuscation=javascript --metadata-file=defaults.yml -f gfm -t html5 -B $HEADER -A $FOOTER"}


RED="\033[91m"
GRN="\033[92m"
MAG="\033[95m"
BLD="\033[1m"
END="\033[0m"

warn() {
    echo "$RED$BLD$1$END"
}

fail() {
    warn $1
    exit 1
}

status() {
    echo "$MAG$1$END"
}

mkdir -p $DEST


status "Rendering"

for file in `find $SRC -name "*.$SRCEXT" -type f` 
do 
   from="${file##$SRC}" # Strip `src` path from file string
   to="${from%%$SRCEXT}$DSTEXT"
   echo "$from --> $to"
   mkdir -p $(dirname "$DEST$to")
   pandoc $PANOPTS --output=$DEST$to $file || warn "failed to create $to"
done


status "Copying over assets"

for file in `find $SRC ! -name "*.$SRCEXT" -type f`
do 
    from=$file
    to="$DEST${file##$SRC}"
    echo "${from##$ROOT} --> ${to##$ROOT}"
    mkdir -p $(dirname $to)
    cp $from $to || warm "Failed to copy asset $to"
done
